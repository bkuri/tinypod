// Generated by CoffeeScript 1.6.3
'use strict';
var CATEGORY, LocalStorageStore, URL_API;

CATEGORY = 'podcasts';

URL_API = 'http://rss.bkuri.com/api/';

LocalStorageStore = (function() {
  function LocalStorageStore(successCallback, errorCallback) {
    this.findByName = function(searchKey, callback, table) {
      var feeds;
      if (table == null) {
        table = 'feeds';
      }
      feeds = JSON.parse(window.localStorage.getItem(table));
      return callback(feeds.filter(function(element) {
        return (element.title.toLowerCase().indexOf(searchKey.toLowerCase())) > -1;
      }));
    };
    this.findById = function(id, callback, table) {
      var feed, _i, _len, _ref, _results;
      if (table == null) {
        table = 'feeds';
      }
      _ref = JSON.parse(window.localStorage.getItem(table));
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        feed = _ref[_i];
        if (feed.id !== id) {
          continue;
        }
        callback(feed);
        break;
      }
      return _results;
    };
    this.loadFeeds = function() {
      var handle, query, stage,
        _this = this;
      this.sid = window.localStorage.getItem('session');
      stage = 0;
      handle = function(result, status, xhr) {
        var cat, found, query, _i, _len, _ref;
        switch (stage) {
          case 0:
            if (!_this.sid) {
              _this.sid = result.content.session_id;
              window.localStorage.setItem('session', _this.sid);
            }
            query = {
              sid: _this.sid,
              op: 'getCategories'
            };
            $.post(URL_API, JSON.stringify(query), handle);
            break;
          case 1:
            found = false;
            _ref = result.content;
            for (_i = 0, _len = _ref.length; _i < _len; _i++) {
              cat = _ref[_i];
              if (cat.title !== CATEGORY) {
                continue;
              }
              found = true;
              query = {
                sid: _this.sid,
                op: 'getFeeds',
                cat_id: cat.id
              };
              $.post(URL_API, JSON.stringify(query), handle);
            }
            if (!found) {
              console.log("ERROR: category '" + CATEGORY + "' not found.");
            }
            break;
          case 2:
            window.localStorage.setItem('feeds', JSON.stringify(result.content));
            successCallback();
        }
        if (stage < 2) {
          return stage++;
        }
      };
      if (this.sid) {
        return handle();
      } else {
        query = {
          op: 'login',
          user: 'admin',
          password: 'funkyr55'
        };
        return $.post(URL_API, JSON.stringify(query), handle);
      }
    };
    this.loadArticles = function(id, callback, refresh) {
      var articles, label, query;
      if (refresh == null) {
        refresh = false;
      }
      label = "feed-" + id;
      articles = refresh ? null : window.localStorage.getItem(label);
      if (articles !== null) {
        return setTimeout(function() {
          return callback(JSON.parse(articles));
        });
      } else {
        query = {
          sid: this.sid,
          op: 'getHeadlines',
          feed_id: id
        };
        return $.post(URL_API, JSON.stringify(query), function(result, status, xhr) {
          window.localStorage.setItem(label, JSON.stringify(result.content));
          return callback(result.content);
        });
      }
    };
    this.loadFeeds();
  }

  return LocalStorageStore;

})();
