// Generated by CoffeeScript 1.6.3
'use strict';
var App;

App = (function() {
  App.detailsURL = /^#feeds\/(\d+)/;

  App.showAlert = function(message, title) {
    if (navigator.notification) {
      return navigator.notification.alert(message, null, title, "OK");
    } else {
      return alert((title ? "" + title + ": " + message : message));
    }
  };

  function App() {
    var $list,
      _this = this;
    $list = $('#thelist');
    this.route = function() {
      var hash, match;
      hash = window.location.hash;
      if (!hash) {
        if (_this.homePage) {
          _this.slidePage(_this.homePage, true);
        } else {
          _this.homePage = new FeedsView(_this.store).render(true);
          _this.homePage.el.appendTo($list);
        }
        _this.currentPage = _this.homePage;
        return;
      }
      match = hash.match(App.detailsURL);
      if (match) {
        return _this.store.findById(Number(match[1]), function(feed) {
          return _this.slidePage(new FeedDetailsView(_this.store, feed).render());
        });
      }
    };
    this.registerEvents = function() {
      var event_begin, event_end, onEnd, options, tappable, touchable;
      tappable = 'tappable-active';
      touchable = document.documentElement.hasOwnProperty('ontouchstart');
      event_begin = touchable ? 'touchstart' : 'mousedown';
      event_end = touchable ? 'touchend' : 'mouseup';
      onEnd = function() {
        var clear;
        clear = $list.hasClass('move-right');
        if (clear) {
          return $('.page:not(.homePage)', $list).remove();
        }
      };
      $list.bind('transitionend', onEnd).on(event_begin, 'a', function(event) {
        return $(event.target).addClass(tappable);
      }).on(event_end, 'a', function(event) {
        return $(event.target).removeClass(tappable);
      });
      options = {
        allowPageScroll: 'none',
        swipe: function(event, direction, distance, duration, fingerCount) {
          return $('h1', this.currentPage).text("swiped " + direction);
        }
      };
      return $(window).on('hashchange', $.proxy(this.route, this)).swipe(options);
    };
    this.slidePage = function(page) {
      var home;
      home = page === this.homePage;
      if (!home) {
        $(page.el).appendTo($list);
      }
      return $list.removeClass('move-right move-left').addClass((home ? 'move-right' : 'move-left'));
    };
    this.registerEvents();
    this.store = new LocalStorageStore(function() {
      return _this.route();
    });
  }

  return App;

})();
